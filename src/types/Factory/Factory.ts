// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class FeeAmountEnabled extends ethereum.Event {
  get params(): FeeAmountEnabled__Params {
    return new FeeAmountEnabled__Params(this);
  }
}

export class FeeAmountEnabled__Params {
  _event: FeeAmountEnabled;

  constructor(event: FeeAmountEnabled) {
    this._event = event;
  }

  get fee(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get tickSpacing(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class FeeCollectorChanged extends ethereum.Event {
  get params(): FeeCollectorChanged__Params {
    return new FeeCollectorChanged__Params(this);
  }
}

export class FeeCollectorChanged__Params {
  _event: FeeCollectorChanged;

  constructor(event: FeeCollectorChanged) {
    this._event = event;
  }

  get oldFeeCollector(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newFeeCollector(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeeSetterChanged extends ethereum.Event {
  get params(): FeeSetterChanged__Params {
    return new FeeSetterChanged__Params(this);
  }
}

export class FeeSetterChanged__Params {
  _event: FeeSetterChanged;

  constructor(event: FeeSetterChanged) {
    this._event = event;
  }

  get oldSetter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newSetter(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ImplementationChanged extends ethereum.Event {
  get params(): ImplementationChanged__Params {
    return new ImplementationChanged__Params(this);
  }
}

export class ImplementationChanged__Params {
  _event: ImplementationChanged;

  constructor(event: ImplementationChanged) {
    this._event = event;
  }

  get oldImplementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newImplementation(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerChanged extends ethereum.Event {
  get params(): OwnerChanged__Params {
    return new OwnerChanged__Params(this);
  }
}

export class OwnerChanged__Params {
  _event: OwnerChanged;

  constructor(event: OwnerChanged) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolCreated extends ethereum.Event {
  get params(): PoolCreated__Params {
    return new PoolCreated__Params(this);
  }
}

export class PoolCreated__Params {
  _event: PoolCreated;

  constructor(event: PoolCreated) {
    this._event = event;
  }

  get token0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get tickSpacing(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get pool(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class SetFeeProtocol extends ethereum.Event {
  get params(): SetFeeProtocol__Params {
    return new SetFeeProtocol__Params(this);
  }
}

export class SetFeeProtocol__Params {
  _event: SetFeeProtocol;

  constructor(event: SetFeeProtocol) {
    this._event = event;
  }

  get feeProtocol0Old(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get feeProtocol1Old(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get feeProtocol0New(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get feeProtocol1New(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class SetPoolFeeProtocol extends ethereum.Event {
  get params(): SetPoolFeeProtocol__Params {
    return new SetPoolFeeProtocol__Params(this);
  }
}

export class SetPoolFeeProtocol__Params {
  _event: SetPoolFeeProtocol;

  constructor(event: SetPoolFeeProtocol) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get feeProtocol0Old(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get feeProtocol1Old(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get feeProtocol0New(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get feeProtocol1New(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class Factory extends ethereum.SmartContract {
  static bind(address: Address): Factory {
    return new Factory("Factory", address);
  }

  POOL_INIT_CODE_HASH(): Bytes {
    let result = super.call(
      "POOL_INIT_CODE_HASH",
      "POOL_INIT_CODE_HASH():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_POOL_INIT_CODE_HASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "POOL_INIT_CODE_HASH",
      "POOL_INIT_CODE_HASH():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createPool(
    tokenA: Address,
    tokenB: Address,
    fee: i32,
    sqrtPriceX96: BigInt,
  ): Address {
    let result = super.call(
      "createPool",
      "createPool(address,address,uint24,uint160):(address)",
      [
        ethereum.Value.fromAddress(tokenA),
        ethereum.Value.fromAddress(tokenB),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(fee)),
        ethereum.Value.fromUnsignedBigInt(sqrtPriceX96),
      ],
    );

    return result[0].toAddress();
  }

  try_createPool(
    tokenA: Address,
    tokenB: Address,
    fee: i32,
    sqrtPriceX96: BigInt,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createPool",
      "createPool(address,address,uint24,uint160):(address)",
      [
        ethereum.Value.fromAddress(tokenA),
        ethereum.Value.fromAddress(tokenB),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(fee)),
        ethereum.Value.fromUnsignedBigInt(sqrtPriceX96),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeAmountTickSpacing(param0: i32): i32 {
    let result = super.call(
      "feeAmountTickSpacing",
      "feeAmountTickSpacing(uint24):(int24)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );

    return result[0].toI32();
  }

  try_feeAmountTickSpacing(param0: i32): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "feeAmountTickSpacing",
      "feeAmountTickSpacing(uint24):(int24)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  feeCollector(): Address {
    let result = super.call("feeCollector", "feeCollector():(address)", []);

    return result[0].toAddress();
  }

  try_feeCollector(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeCollector", "feeCollector():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeProtocol(): i32 {
    let result = super.call("feeProtocol", "feeProtocol():(uint8)", []);

    return result[0].toI32();
  }

  try_feeProtocol(): ethereum.CallResult<i32> {
    let result = super.tryCall("feeProtocol", "feeProtocol():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  feeSetter(): Address {
    let result = super.call("feeSetter", "feeSetter():(address)", []);

    return result[0].toAddress();
  }

  try_feeSetter(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeSetter", "feeSetter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPool(param0: Address, param1: Address, param2: i32): Address {
    let result = super.call(
      "getPool",
      "getPool(address,address,uint24):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param2)),
      ],
    );

    return result[0].toAddress();
  }

  try_getPool(
    param0: Address,
    param1: Address,
    param2: i32,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPool",
      "getPool(address,address,uint24):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param2)),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  implementation(): Address {
    let result = super.call("implementation", "implementation():(address)", []);

    return result[0].toAddress();
  }

  try_implementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementation",
      "implementation():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  initializePool(
    token0: Address,
    token1: Address,
    fee: i32,
    sqrtPriceX96: BigInt,
  ): Address {
    let result = super.call(
      "initializePool",
      "initializePool(address,address,uint24,uint160):(address)",
      [
        ethereum.Value.fromAddress(token0),
        ethereum.Value.fromAddress(token1),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(fee)),
        ethereum.Value.fromUnsignedBigInt(sqrtPriceX96),
      ],
    );

    return result[0].toAddress();
  }

  try_initializePool(
    token0: Address,
    token1: Address,
    fee: i32,
    sqrtPriceX96: BigInt,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "initializePool",
      "initializePool(address,address,uint24,uint160):(address)",
      [
        ethereum.Value.fromAddress(token0),
        ethereum.Value.fromAddress(token1),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(fee)),
        ethereum.Value.fromUnsignedBigInt(sqrtPriceX96),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nfpManager(): Address {
    let result = super.call("nfpManager", "nfpManager():(address)", []);

    return result[0].toAddress();
  }

  try_nfpManager(): ethereum.CallResult<Address> {
    let result = super.tryCall("nfpManager", "nfpManager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolFeeProtocol(pool: Address): i32 {
    let result = super.call(
      "poolFeeProtocol",
      "poolFeeProtocol(address):(uint8)",
      [ethereum.Value.fromAddress(pool)],
    );

    return result[0].toI32();
  }

  try_poolFeeProtocol(pool: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "poolFeeProtocol",
      "poolFeeProtocol(address):(uint8)",
      [ethereum.Value.fromAddress(pool)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  voter(): Address {
    let result = super.call("voter", "voter():(address)", []);

    return result[0].toAddress();
  }

  try_voter(): ethereum.CallResult<Address> {
    let result = super.tryCall("voter", "voter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  votingEscrow(): Address {
    let result = super.call("votingEscrow", "votingEscrow():(address)", []);

    return result[0].toAddress();
  }

  try_votingEscrow(): ethereum.CallResult<Address> {
    let result = super.tryCall("votingEscrow", "votingEscrow():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreatePoolCall extends ethereum.Call {
  get inputs(): CreatePoolCall__Inputs {
    return new CreatePoolCall__Inputs(this);
  }

  get outputs(): CreatePoolCall__Outputs {
    return new CreatePoolCall__Outputs(this);
  }
}

export class CreatePoolCall__Inputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get tokenA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get fee(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get sqrtPriceX96(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreatePoolCall__Outputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class EnableFeeAmountCall extends ethereum.Call {
  get inputs(): EnableFeeAmountCall__Inputs {
    return new EnableFeeAmountCall__Inputs(this);
  }

  get outputs(): EnableFeeAmountCall__Outputs {
    return new EnableFeeAmountCall__Outputs(this);
  }
}

export class EnableFeeAmountCall__Inputs {
  _call: EnableFeeAmountCall;

  constructor(call: EnableFeeAmountCall) {
    this._call = call;
  }

  get fee(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get tickSpacing(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class EnableFeeAmountCall__Outputs {
  _call: EnableFeeAmountCall;

  constructor(call: EnableFeeAmountCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _nfpManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _votingEscrow(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _voter(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _implementation(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _feeSetter(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _feeCollector(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializePoolCall extends ethereum.Call {
  get inputs(): InitializePoolCall__Inputs {
    return new InitializePoolCall__Inputs(this);
  }

  get outputs(): InitializePoolCall__Outputs {
    return new InitializePoolCall__Outputs(this);
  }
}

export class InitializePoolCall__Inputs {
  _call: InitializePoolCall;

  constructor(call: InitializePoolCall) {
    this._call = call;
  }

  get token0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get fee(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get sqrtPriceX96(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class InitializePoolCall__Outputs {
  _call: InitializePoolCall;

  constructor(call: InitializePoolCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SetFeeCall extends ethereum.Call {
  get inputs(): SetFeeCall__Inputs {
    return new SetFeeCall__Inputs(this);
  }

  get outputs(): SetFeeCall__Outputs {
    return new SetFeeCall__Outputs(this);
  }
}

export class SetFeeCall__Inputs {
  _call: SetFeeCall;

  constructor(call: SetFeeCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _fee(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetFeeCall__Outputs {
  _call: SetFeeCall;

  constructor(call: SetFeeCall) {
    this._call = call;
  }
}

export class SetFeeCollectorCall extends ethereum.Call {
  get inputs(): SetFeeCollectorCall__Inputs {
    return new SetFeeCollectorCall__Inputs(this);
  }

  get outputs(): SetFeeCollectorCall__Outputs {
    return new SetFeeCollectorCall__Outputs(this);
  }
}

export class SetFeeCollectorCall__Inputs {
  _call: SetFeeCollectorCall;

  constructor(call: SetFeeCollectorCall) {
    this._call = call;
  }

  get _feeCollector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeCollectorCall__Outputs {
  _call: SetFeeCollectorCall;

  constructor(call: SetFeeCollectorCall) {
    this._call = call;
  }
}

export class SetFeeProtocolCall extends ethereum.Call {
  get inputs(): SetFeeProtocolCall__Inputs {
    return new SetFeeProtocolCall__Inputs(this);
  }

  get outputs(): SetFeeProtocolCall__Outputs {
    return new SetFeeProtocolCall__Outputs(this);
  }
}

export class SetFeeProtocolCall__Inputs {
  _call: SetFeeProtocolCall;

  constructor(call: SetFeeProtocolCall) {
    this._call = call;
  }

  get _feeProtocol(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetFeeProtocolCall__Outputs {
  _call: SetFeeProtocolCall;

  constructor(call: SetFeeProtocolCall) {
    this._call = call;
  }
}

export class SetFeeSetterCall extends ethereum.Call {
  get inputs(): SetFeeSetterCall__Inputs {
    return new SetFeeSetterCall__Inputs(this);
  }

  get outputs(): SetFeeSetterCall__Outputs {
    return new SetFeeSetterCall__Outputs(this);
  }
}

export class SetFeeSetterCall__Inputs {
  _call: SetFeeSetterCall;

  constructor(call: SetFeeSetterCall) {
    this._call = call;
  }

  get _newFeeSetter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeSetterCall__Outputs {
  _call: SetFeeSetterCall;

  constructor(call: SetFeeSetterCall) {
    this._call = call;
  }
}

export class SetImplementationCall extends ethereum.Call {
  get inputs(): SetImplementationCall__Inputs {
    return new SetImplementationCall__Inputs(this);
  }

  get outputs(): SetImplementationCall__Outputs {
    return new SetImplementationCall__Outputs(this);
  }
}

export class SetImplementationCall__Inputs {
  _call: SetImplementationCall;

  constructor(call: SetImplementationCall) {
    this._call = call;
  }

  get _implementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetImplementationCall__Outputs {
  _call: SetImplementationCall;

  constructor(call: SetImplementationCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class SetPoolFeeProtocolCall extends ethereum.Call {
  get inputs(): SetPoolFeeProtocolCall__Inputs {
    return new SetPoolFeeProtocolCall__Inputs(this);
  }

  get outputs(): SetPoolFeeProtocolCall__Outputs {
    return new SetPoolFeeProtocolCall__Outputs(this);
  }
}

export class SetPoolFeeProtocolCall__Inputs {
  _call: SetPoolFeeProtocolCall;

  constructor(call: SetPoolFeeProtocolCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get feeProtocol0(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get feeProtocol1(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class SetPoolFeeProtocolCall__Outputs {
  _call: SetPoolFeeProtocolCall;

  constructor(call: SetPoolFeeProtocolCall) {
    this._call = call;
  }
}
